---
title: 'Relative Backward Error in Linear Systems'
author: 'Nathan Lunceford'
format:
  html:
    self-contained: true
    page-layout: full
    toc: true
    toc-depth: 3
    toc-location: right
    number-sections: false
    html-math-method: katex
    embed-resources: true
    code-fold: true
    code-summary: 'Show the code'
    code-overflow: wrap
    code-copy: hover
    code-tools:
      source: false
      toggle: true
      caption: See code
engine: jupyter
preview:
  port: 3000
  browser: true
  watch-inputs: true
  navigate: true
---

## Overview

The **relative backward error** is a normalized version of the backward error. It measures how large the residual vector $\mathbf{r} = \mathbf{b} - A\mathbf{x_a}$ is relative to the size of the right-hand side vector $\mathbf{b}$. This normalization ensures the backward error is interpreted in the context of the magnitude of the original problem.

The relative backward error is defined as:

$$
\text{RBE} = \frac{\|\mathbf{r}\|_\infty}{\|\mathbf{b}\|_\infty},
$$

where:

- $\|\mathbf{r}\|_\infty$: The infinity norm of the residual vector, $\mathbf{r} = \mathbf{b} - A\mathbf{x_a}$,
- $\|\mathbf{b}\|_\infty$: The infinity norm of the right-hand side vector $\mathbf{b}$.

## What Relative Backward Error Represents

1. **Scale-Invariant Error**:

   - By dividing the backward error by $\|\mathbf{b}\|_\infty$, the relative backward error accounts for the scale of $\mathbf{b}$. This is useful when comparing systems with different magnitudes of $\mathbf{b}$.

2. **Exact Solution**:

   - If $\mathbf{x_a}$ is the exact solution, then the residual $\mathbf{r} = \mathbf{0}$, and:

     $$
     \text{RBE} = 0.
     $$

3. **Error Normalization**:
   - A small relative backward error indicates that the residual is negligible compared to the size of $\mathbf{b}$, suggesting a high-quality solution.

## Why Relative Backward Error Matters

- **Assessing Solution Quality**:

  - The relative backward error is a scale-invariant metric, making it easier to compare errors across systems of different sizes.

- **Numerical Stability**:
  - A small relative backward error ensures that the approximate solution $\mathbf{x_a}$ satisfies a nearby system with respect to the scale of $\mathbf{b}$.

## Example

Consider the system:

$$
A = \begin{bmatrix} 1 & 1 \\ 3 & -4 \end{bmatrix}, \quad
\mathbf{b} = \begin{bmatrix} 3 \\ 2 \end{bmatrix}, \quad
\mathbf{x_a} = \begin{bmatrix} 1 \\ 1 \end{bmatrix}.
$$

### Step 1: Compute $A\mathbf{x_a}$

Multiply $A$ by $\mathbf{x_a}$:

$$
A\mathbf{x_a} = \begin{bmatrix} 1 \times 1 + 1 \times 1 \\ 3 \times 1 + (-4) \times 1 \end{bmatrix} = \begin{bmatrix} 2 \\ -1 \end{bmatrix}.
$$

### Step 2: Compute the Residual $\mathbf{r}$

Subtract $A\mathbf{x_a}$ from $\mathbf{b}$:

$$
\mathbf{r} = \mathbf{b} - A\mathbf{x_a} = \begin{bmatrix} 3 - 2 \\ 2 - (-1) \end{bmatrix} = \begin{bmatrix} 1 \\ 3 \end{bmatrix}.
$$

### Step 3: Compute the Relative Backward Error

1. Compute the infinity norms:

   - $\|\mathbf{r}\|_\infty = \max(|1|, |3|) = 3$,
   - $\|\mathbf{b}\|_\infty = \max(|3|, |2|) = 3$.

2. Calculate the relative backward error:

   $$
   \text{RBE} = \frac{\|\mathbf{r}\|_\infty}{\|\mathbf{b}\|_\infty} = \frac{3}{3} = 1.
   $$

### Step 4: Interpretation

- A relative backward error of $1$ indicates that the residual $\mathbf{r}$ is as large as the largest component of $\mathbf{b}$.

## Visualization of Relative Backward Error

The graph below illustrates the residual $\mathbf{r}$ relative to $\mathbf{b}$:

- **Blue Vector** ($\mathbf{b}$): The target vector in the system.
- **Green Vector** ($A\mathbf{x_a}$): The approximate solution mapped back through $A$.
- **Red Vector** ($\mathbf{r}$): The residual vector, normalized by $\|\mathbf{b}\|_\infty$.

```{python}
#| label: relative-backward-error
#| code-summary: "Show Code"

import matplotlib.pyplot as plt
import numpy as np

A = np.array([[1, 1], [3, -4]])
b = np.array([3, 2])
x_a = np.array([1, 1])

Ax_a = A @ x_a
r = b - Ax_a

plt.figure(figsize=(10, 8))
origin = np.zeros(2)

plt.quiver(*origin, *b, color='blue', angles='xy', scale_units='xy', scale=1, label=r'$\mathbf{b}$')
plt.quiver(*origin, *Ax_a, color='green', angles='xy', scale_units='xy', scale=1, label=r'$A\mathbf{x}_a$')
plt.quiver(*Ax_a, *r, color='red', angles='xy', scale_units='xy', scale=1, label=r'$\mathbf{r} = \mathbf{b} - A\mathbf{x}_a$')

plt.annotate(r'$A\mathbf{x}_a$', (Ax_a[0], Ax_a[1]), textcoords="offset points", xytext=(-60,10), ha='center', color='green', fontsize=12)
plt.annotate(r'$\mathbf{b}$', (b[0], b[1]), textcoords="offset points", xytext=(-20,15), ha='center', color='blue', fontsize=12)
plt.annotate(r'$\mathbf{r}$', (Ax_a[0] + r[0]/2, Ax_a[1] + r[1]/2), textcoords="offset points", xytext=(10,0), ha='center', color='red', fontsize=12)

plt.plot([Ax_a[0], b[0]], [Ax_a[1], b[1]], 'r--', linewidth=1)

plt.xlim(-1, 5)
plt.ylim(-2, 5)
plt.axhline(0, color='black', linewidth=0.5)
plt.axvline(0, color='black', linewidth=0.5)
plt.grid(color='gray', linestyle='--', linewidth=0.5)
plt.legend(loc='upper left', fontsize=12)
plt.title('Visualization of Relative Backward Error', fontsize=16)
plt.xlabel('x-axis', fontsize=14)
plt.ylabel('y-axis', fontsize=14)
plt.gca().set_aspect('equal', adjustable='box')
plt.show()
```

## Conclusion

- The **relative backward error** provides a normalized measure of how much the right-hand side $\mathbf{b}$ must be perturbed for $\mathbf{x_a}$ to satisfy the system exactly.
- By comparing the size of $\mathbf{r}$ to $\mathbf{b}$, the relative backward error allows for consistent error analysis across problems of different scales.
